{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\webpage\\\\src\\\\App.jsx\";\nimport React, { useState } from 'react';\nimport './index.css';\nconst api = {\n  key: \"3323833ffe9472f1851c4610d6f2fe0b\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n        setWeather(result);\n        setQuery('');\n        console.log(result);\n      });\n    }\n  };\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day}  ${date} ${month} ${year}`;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"search-bar\",\n    placeholder: \"Search...\",\n    onChange: e => setQuery(e.target.value),\n    value: query,\n    onKeyPress: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, \"Karnal City\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, dateBuilder(new Date()), \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 14\n    }\n  }, \"45 \\xB0C\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 14\n    }\n  }, \"Sunny\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/DELL/webpage/src/App.jsx"],"names":["React","useState","api","key","base","App","query","setQuery","weather","setWeather","search","evt","fetch","then","res","json","result","console","log","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","e","target","value","Date"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './index.css';\r\nconst api={\r\n    key:\"3323833ffe9472f1851c4610d6f2fe0b\",\r\n    base:\"https://api.openweathermap.org/data/2.5/\"\r\n}\r\n \r\n\r\n\r\nfunction App() {\r\n     \r\n    const[query,setQuery]=useState('');\r\n    const[weather,setWeather]=useState({});\r\n\r\n    const search=evt =>{\r\n        if(evt.key===\"Enter\"){\r\n            fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n            .then(res=>res.json())\r\n            .then(result=>{\r\n              \r\n                setWeather(result);\r\n                setQuery('');\r\n                console.log(result);\r\n            });\r\n        }\r\n    }\r\n\r\n    const dateBuilder=(d)=>{\r\n        let months=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\r\n        let days=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\r\n\r\n\r\n        let day=days[d.getDay()];\r\n        let date=d.getDate();\r\n        let month=months[d.getMonth()];\r\n        let year=d.getFullYear();\r\n\r\n        return `${day}  ${date} ${month} ${year}`\r\n    }\r\n    return (\r\n        <div className=\"app\">\r\n              <main>\r\n              <div className=\"search-box\">\r\n              <input \r\n              type=\"text\"\r\n              className=\"search-bar\"\r\n              placeholder=\"Search...\"\r\n              onChange={e=>setQuery(e.target.value)}\r\n              value={query}\r\n              onKeyPress={search}\r\n              />\r\n              </div>\r\n              <div className=\"location-box\">\r\n              <div className=\"location\">Karnal City</div>\r\n              <div className=\"date\">{dateBuilder(new Date())} </div>\r\n              </div>\r\n             <div className=\"weather-box\">\r\n             <div className=\"temp\">\r\n             45 Â°C\r\n             </div>\r\n             <div className=\"weather\">\r\n             Sunny\r\n             </div>\r\n             </div>\r\n              </main>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}